<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--redis配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="100" />
        <property name="minIdle" value="100" />
        <property name="maxIdle" value="300" />
        <property name="maxWaitMillis" value="1000" />
        <property name="testOnBorrow" value="true" />
    </bean>
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="localhost" />
                    <constructor-arg name="port" value="6379" />
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <!-- redis服务器中心 -->
    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig" />
        <property name="port" value="6379" />
        <property name="hostName" value="localhost" />
        <!--<property name="password" value="123456" />-->
        <property name="timeout" value="1000"/>
        <property name="database" value="0"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>
    <!--<bean id="connectionFactoryAuth"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="poolConfig" ref="poolConfig" />-->
        <!--<property name="port" value="6379" />-->
        <!--<property name="hostName" value="localhost" />-->
        <!--&lt;!&ndash;<property name="password" value="${redis.password}" />&ndash;&gt;-->
        <!--<property name="timeout" value="1000"/>-->
        <!--<property name="database" value="0"/>-->
    <!--</bean>-->
    <!--<bean id="redisTemplateAuth" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="connectionFactoryAuth" />-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 配置缓存,注解时产生作用 -->
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate" />
        <property name="defaultExpiration" value="60"></property>
    </bean>
    <bean class="com.ticket.utils.RedisClient" id="redisClient">
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>

    <bean class="com.ticket.service.impl.RedisUtils" id="redisUtils">
        <property name="redisTemplate" ref="redisTemplate"></property>
    </bean>

</beans>